language: cpp
dist: xenial

script:
  - mkdir build && cd build
  - cmake -DCMAKE_BUILD_TYPE=Release ..
  - make -j2
  - ctest -V

before_install:
  - eval "${MATRIX_EVAL}"

matrix:
  include:

    ######## LINUX CLANG ########
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-3.9
          packages:
            - clang-3.9
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-4.0
          packages:
            - clang-4.0
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-5.0
          packages:
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-6.0
          packages:
            - clang-6.0
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-7
          packages:
            - clang-7
      env:
        - MATRIX_EVAL="CC=clang-7 && CXX=clang++-7"
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-8
          packages:
            - clang-8
      env:
        - MATRIX_EVAL="CC=clang-8 && CXX=clang++-8"
    ######## LINUX GCC ########
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env:
        - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

    ######## OSX CLANG ########
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++"
      before_script:
        - brew install llvm@3.9 && brew link --overwrite llvm@3.9 --force
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++"
      before_script:
        - brew install llvm@4 && brew link --overwrite llvm@4 --force
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++"
      before_script:
        - brew install llvm@5 && brew link --overwrite llvm@5 --force
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++"
      before_script:
        - brew install llvm@6 && brew link --overwrite llvm@6 --force
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-7 && CXX=clang++"
      before_script:
        - brew install llvm@7 && brew link --overwrite llvm@7 --force
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-8 && CXX=clang++"
      before_script:
        - brew install llvm@8
        - export PATH="/usr/local/opt/llvm/bin:$PATH"
        - export LDFLAGS="-L/usr/local/opt/llvm/lib"
        - export CPPFLAGS="-I/usr/local/opt/llvm/include"
    ######## OSX GCC ########
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
      before_script:
        - brew install gcc@4.9
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      before_script:
        - brew install gcc@5
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
      before_script:
        - brew install gcc@6
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      before_script:
        - brew install gcc@7
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      before_script:
        - brew install gcc@8

    # COVERITY_SCAN
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7 # Max version supported by coverity scan right now
        coverity_scan:
          project:
            name: "Zialus/C-C0Compiler"
          notification_email: raulmendesferreira@gmail.com
          build_command_prepend: "git fetch --unshallow && cov-configure --comptype gcc --compiler gcc-7 --template && mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release .."
          build_command: "make"
          branch_pattern: master
      script:
        - echo "Coverity Scan"
      env:
        - secure: "XfGqM8sQu9DgimjAQUzUMFu3Xlu6/WSQNquIwslTI5mLGKi+9w2OpMvvTdhMz4dj0HAyY1G6OzzNKh5ZlQ6a2vQNRPwkWuxiFolEzqqP2t116cQnDh35MjCIohNT29224dBmzAxuKClP3iUBafTKhw1yN+zD6R3yfTfow7T3PUqc1eYG28EnXIHMs+Bg7WR/n5L5clfthds5pzsF473A9Tl/EkPRW9gEJatmRok0Tbxf1KLZ45nkLVEZqGuuOE+WJJYrfcEaRdHBFCQegxFJ9H9lhxalLizq5Q/Q7gZ4zjb/kGBJUSxxQduP9ntOy62AjcnnDgrhhSVoWmaHUeidjck/GtD5yXiaKjWJGcI5/hoEv8Mjri5jdMKglJB51RtAyLhKgQKgjZUqvXCN383SybvAYzfiazLfMG4iaKU3I3P2KGUPxLQFn2CBdr47dOB1AIYsi+k0FAb/yJNX+9Hpz0ZpeyEr/1UWsEUrtL954JkiKqzYVu7TuQtcUXsUbACibHlDUhP3z3kOYGHbSmGKhFuYVzhACGTyQIf5vGSHvFPwm+ne8u/Lc4eae9HirBqIpEdkLLY7nTUhsQzCunfOgBwfPe0Mx1oLUelsnd2d5PRmlLTC+tOLG6U8u8DfkoH/iLSgosK+9orY71IOW4u4xrUdz9xU3xJY+AxmtjqCdaw="
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
